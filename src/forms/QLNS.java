/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forms;

import businessLayer.CSDL;
import businessLayer.Cmb_Views;
import dataTransferObject.DANHSACHSACH;
import businessLayer.TXS;
import businessLayer.TXS2;
import businessLayer.TXS3;
import businessLayer.TXS4;
import businessLayer.TXS5;
import businessLayer.TXSPHIEUNHAPSACH;
import businessLayer.UpdateTable;
import dataTransferObject.*;
import java.awt.Color;
import java.awt.List;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;

/**
 *
 * @author Vu Khanh
 */
public class QLNS extends javax.swing.JFrame {

    /**
     * Creates new form QLNS
     */
    public void Exit() {
        int reply = JOptionPane.showConfirmDialog(null, "Bạn chắc có muốn thoát chương trình?", "Thông báo!", JOptionPane.YES_NO_OPTION);
        if (reply == JOptionPane.NO_OPTION) {
            return;
        } else {
            JOptionPane.showMessageDialog(null, "Cảm ơn bạn đã sử dụng chương trình !");
            System.exit(0);
        }
    }
    public void SearchS(JTextField t, String sql, String sql1, JTable d){
        if (t.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Bạn chưa nhập kí tự để tìm kiếm !","Error", JOptionPane.ERROR_MESSAGE);
            t.requestFocus();
            UpdateTable.LoadData(sql, d);
        } else {
            UpdateTable.LoadData(sql1, d);
            if(d.getRowCount() == 0){
                 UpdateTable.LoadData(sql, d);
                JOptionPane.showMessageDialog(null, "Không tìm thấy sách bạn cần tìm","Error", JOptionPane.ERROR_MESSAGE);
               
            }
        }
    }
    public static String sqlSach = "SELECT MAPN AS N'Mã sách', TENSACH,THELOAI,TACGIA,SL FROM PHIEUNHAPSACH";
    public static String sqlpnSach = "SELECT * FROM PHIEUNHAPSACH";
    public static String sqlHDSach = "SELECT d.MAHD,e.HOTENKH,d.NGAYLAPHOADON,p.TENSACH,p.THELOAI,d.SL,d.DONGIA FROM PHIEUNHAPSACH p, HOADONBANSACH d, PHIEUTHUTIEN e where p.MAPN = d.MAPN and d.MAPT = e.MAPT";
    public static String sqlPTTien = "select * from PHIEUTHUTIEN";
    public static String sqlBCTon = "select a.MABCT,a.THANG,b.TENSACH, a.TONDAU,a.PHATSINH, (a.TONDAU+a.PHATSINH) AS 'TONCUOI' from BAOCAOTON a ,PHIEUNHAPSACH b where a.MAPN =b.MAPN";
    public static String sqlBCCNo = "select b.MABCCN, b.THANG, t.HOTENKH,b.NODAU,b.PHATSINH, (NODAU+PHATSINH) as'NOCUOI' from BAOCAOCONGNO b , PHIEUTHUTIEN t where b.MAPT = t.MAPT";
    public static String sqlcmb_ptt = "select MAPT from PHIEUTHUTIEN";
    public static String sqlcmb_pn = "select MAPN from PHIEUNHAPSACH";
    public static String sqlcmb_bccn = "select MABCCN from BAOCAOCONGNO";

    public QLNS() {
        initComponents();
        UpdateTable.LoadData(sqlpnSach, jTable1);
        UpdateTable.LoadData(sqlHDSach, jTable2);
        UpdateTable.LoadData(sqlPTTien, jTable3);
        UpdateTable.LoadData(sqlBCTon, jTable4);
        UpdateTable.LoadData(sqlBCCNo, jTable5);
        UpdateTable.LoadData(sqlSach, jTable6);
        Cmb_Views.LoadData_MAPT(sqlcmb_ptt, Cmb_MAPT);
        Cmb_Views.LoadData_MAPN(sqlcmb_pn, Cmb_MAPN);
        Cmb_Views.LoadData_MABCCN(sqlcmb_bccn, Cmb_MABCCN);
        Cmb_Views.LoadData_MAPNT(sqlcmb_pn, Cmb_MAPNT);
        Cmb_Views.LoadData_MAPTB(sqlcmb_ptt, Cmb_MAPTB);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel18 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel17 = new javax.swing.JPanel();
        jTextField7 = new javax.swing.JTextField();
        jToggleButton6 = new javax.swing.JToggleButton();
        jSeparator6 = new javax.swing.JSeparator();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jLabel63 = new javax.swing.JLabel();
        jButton29 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jTextField2 = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jToggleButton1 = new javax.swing.JToggleButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jTextField11 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jTextField22 = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel11 = new javax.swing.JLabel();
        jPanel9 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jSeparator2 = new javax.swing.JSeparator();
        jTextField3 = new javax.swing.JTextField();
        jToggleButton2 = new javax.swing.JToggleButton();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jTextField14 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jTextField15 = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jTextField20 = new javax.swing.JTextField();
        Cmb_MAPT = new javax.swing.JComboBox<>();
        Cmb_MAPT1 = new javax.swing.JComboBox<>();
        Cmb_MAPN = new javax.swing.JComboBox<>();
        Cmb_MABCCN = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jTextField4 = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jToggleButton3 = new javax.swing.JToggleButton();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jTextField23 = new javax.swing.JTextField();
        jTextField24 = new javax.swing.JTextField();
        jTextField25 = new javax.swing.JTextField();
        jTextField26 = new javax.swing.JTextField();
        jTextField27 = new javax.swing.JTextField();
        jTextField28 = new javax.swing.JTextField();
        jTextField29 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jSeparator4 = new javax.swing.JSeparator();
        jTextField5 = new javax.swing.JTextField();
        jToggleButton4 = new javax.swing.JToggleButton();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable4 = new javax.swing.JTable();
        jPanel10 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jTextField35 = new javax.swing.JTextField();
        jTextField34 = new javax.swing.JTextField();
        jTextField33 = new javax.swing.JTextField();
        jTextField30 = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        jTextField43 = new javax.swing.JTextField();
        Cmb_MAPNT = new javax.swing.JComboBox<>();
        jLabel35 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jTextField6 = new javax.swing.JTextField();
        jPanel12 = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jTextField36 = new javax.swing.JTextField();
        jTextField37 = new javax.swing.JTextField();
        jTextField38 = new javax.swing.JTextField();
        jTextField39 = new javax.swing.JTextField();
        jTextField41 = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jTextField42 = new javax.swing.JTextField();
        Cmb_MAPTB = new javax.swing.JComboBox<>();
        jLabel48 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable5 = new javax.swing.JTable();
        jLabel49 = new javax.swing.JLabel();
        jToggleButton5 = new javax.swing.JToggleButton();
        jSeparator5 = new javax.swing.JSeparator();
        jPanel16 = new javax.swing.JPanel();
        jButton21 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jButton24 = new javax.swing.JButton();
        jButton25 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        jTextField1.setText("jTextField1");

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Quản Lý Nhà Sách");
        setPreferredSize(new java.awt.Dimension(830, 730));
        setResizable(false);
        getContentPane().setLayout(null);

        jTabbedPane1.setToolTipText("");
        jTabbedPane1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jTabbedPane1AncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jPanel18.setLayout(new java.awt.GridBagLayout());

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/anhgioithieu.png"))); // NOI18N
        jLabel4.setPreferredSize(new java.awt.Dimension(805, 750));
        jPanel18.add(jLabel4, new java.awt.GridBagConstraints());

        jTabbedPane1.addTab("Giới Thiệu", jPanel18);

        jPanel17.setLayout(null);

        jTextField7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField7.setToolTipText("");
        jPanel17.add(jTextField7);
        jTextField7.setBounds(190, 26, 280, 30);

        jToggleButton6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jToggleButton6.setText("Tìm kiếm");
        jToggleButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton6ActionPerformed(evt);
            }
        });
        jPanel17.add(jToggleButton6);
        jToggleButton6.setBounds(490, 27, 97, 30);
        jPanel17.add(jSeparator6);
        jSeparator6.setBounds(-5, 80, 800, 13);

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(jTable6);

        jPanel17.add(jScrollPane6);
        jScrollPane6.setBounds(20, 140, 750, 450);

        jLabel63.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel63.setText("Danh Sách Sách");
        jPanel17.add(jLabel63);
        jLabel63.setBounds(300, 100, 210, 20);

        jButton29.setText("LOAD");
        jButton29.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton29ActionPerformed(evt);
            }
        });
        jPanel17.add(jButton29);
        jButton29.setBounds(610, 30, 100, 30);

        jTabbedPane1.addTab("Danh Sách Sách", jPanel17);

        jPanel1.setLayout(null);

        jTextField2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField2.setToolTipText("");
        jPanel1.add(jTextField2);
        jTextField2.setBounds(150, 20, 300, 30);
        jPanel1.add(jSeparator1);
        jSeparator1.setBounds(0, 70, 774, 10);

        jToggleButton1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jToggleButton1.setText("Tìm kiếm");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jToggleButton1);
        jToggleButton1.setBounds(490, 20, 97, 30);

        jPanel3.setPreferredSize(new java.awt.Dimension(273, 402));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jPanel4.setPreferredSize(new java.awt.Dimension(300, 89));
        jPanel4.setLayout(null);

        jLabel6.setText("Tên Sách:");
        jPanel4.add(jLabel6);
        jLabel6.setBounds(20, 70, 110, 25);

        jLabel7.setText("Tên Tác Giả:");
        jPanel4.add(jLabel7);
        jLabel7.setBounds(20, 150, 130, 25);

        jLabel8.setText("Thể Loại:");
        jPanel4.add(jLabel8);
        jLabel8.setBounds(20, 110, 130, 25);

        jLabel9.setText("Ngày Nhập:");
        jPanel4.add(jLabel9);
        jLabel9.setBounds(20, 190, 130, 20);

        jLabel10.setText("Số Lượng:");
        jPanel4.add(jLabel10);
        jLabel10.setBounds(20, 230, 110, 25);
        jPanel4.add(jTextField8);
        jTextField8.setBounds(100, 230, 180, 25);
        jPanel4.add(jTextField9);
        jTextField9.setBounds(100, 110, 180, 25);
        jPanel4.add(jTextField10);
        jTextField10.setBounds(100, 70, 180, 25);
        jPanel4.add(jTextField11);
        jTextField11.setBounds(100, 150, 180, 25);
        jPanel4.add(jTextField13);
        jTextField13.setBounds(100, 190, 180, 25);
        jPanel4.add(jTextField22);
        jTextField22.setBounds(100, 30, 180, 25);

        jLabel55.setText("Mã PN:");
        jPanel4.add(jLabel55);
        jLabel55.setBounds(20, 30, 110, 25);

        jPanel3.add(jPanel4, java.awt.BorderLayout.LINE_END);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setName("ListSach"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(10, 110, 770, 330);

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Phiếu Nhập Sách");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(550, 70, 170, 50);

        jPanel9.setLayout(null);

        jButton1.setText("Xóa");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton1);
        jButton1.setBounds(350, 10, 93, 30);

        jButton2.setText("Sửa");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton2);
        jButton2.setBounds(490, 10, 94, 30);

        jButton3.setText("Thoát");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton3);
        jButton3.setBounds(650, 10, 93, 30);

        jButton4.setText("Thêm");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton4);
        jButton4.setBounds(70, 10, 94, 30);

        jButton5.setText("Lưu");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel9.add(jButton5);
        jButton5.setBounds(210, 10, 93, 30);

        jPanel1.add(jPanel9);
        jPanel9.setBounds(0, 500, 790, 50);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Mã sách,tên sách:");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 20, 150, 30);

        jTabbedPane1.addTab("Phiếu Nhập Sách", jPanel1);

        jPanel2.setLayout(null);
        jPanel2.add(jSeparator2);
        jSeparator2.setBounds(0, 70, 785, 13);

        jTextField3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField3.setToolTipText("");
        jPanel2.add(jTextField3);
        jTextField3.setBounds(180, 20, 290, 30);

        jToggleButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jToggleButton2.setText("Tìm kiếm");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jToggleButton2);
        jToggleButton2.setBounds(500, 20, 97, 30);

        jLabel13.setText("Hóa Đơn Bán Sách");
        jPanel2.add(jLabel13);
        jLabel13.setBounds(20, 80, 160, 20);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "STT", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(20, 111, 470, 370);

        jPanel7.setLayout(null);

        jLabel14.setText("Mã Hóa Đơn:");
        jPanel7.add(jLabel14);
        jLabel14.setBounds(6, 46, 100, 25);

        jLabel15.setText("Ngày Lập HĐ:");
        jPanel7.add(jLabel15);
        jLabel15.setBounds(6, 86, 110, 25);

        jLabel16.setText("Mã PT:");
        jPanel7.add(jLabel16);
        jLabel16.setBounds(6, 126, 110, 25);

        jLabel17.setText("Mã PN:");
        jPanel7.add(jLabel17);
        jLabel17.setBounds(6, 166, 120, 25);

        jLabel18.setText("Mã BCCN:");
        jPanel7.add(jLabel18);
        jLabel18.setBounds(6, 206, 110, 20);

        jLabel22.setText("Số Lượng:");
        jPanel7.add(jLabel22);
        jLabel22.setBounds(6, 292, 110, 25);

        jLabel19.setText("Đơn Giá:");
        jPanel7.add(jLabel19);
        jLabel19.setBounds(6, 332, 110, 25);

        jTextField19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField19ActionPerformed(evt);
            }
        });
        jPanel7.add(jTextField19);
        jTextField19.setBounds(86, 46, 180, 25);
        jPanel7.add(jTextField14);
        jTextField14.setBounds(86, 86, 180, 25);
        jPanel7.add(jTextField21);
        jTextField21.setBounds(86, 292, 180, 25);
        jPanel7.add(jTextField15);
        jTextField15.setBounds(86, 332, 180, 25);

        jLabel21.setText("Họ Tên KH:");
        jPanel7.add(jLabel21);
        jLabel21.setBounds(6, 249, 110, 20);
        jPanel7.add(jTextField20);
        jTextField20.setBounds(86, 249, 180, 25);

        Cmb_MAPT.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jPanel7.add(Cmb_MAPT);
        Cmb_MAPT.setBounds(90, 130, 170, 24);

        Cmb_MAPT1.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jPanel7.add(Cmb_MAPT1);
        Cmb_MAPT1.setBounds(90, 130, 170, 24);

        Cmb_MAPN.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jPanel7.add(Cmb_MAPN);
        Cmb_MAPN.setBounds(90, 170, 170, 24);

        Cmb_MABCCN.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jPanel7.add(Cmb_MABCCN);
        Cmb_MABCCN.setBounds(90, 210, 170, 24);

        jLabel20.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel20.setText("Phiếu Nhập Hóa Đơn");
        jPanel7.add(jLabel20);
        jLabel20.setBounds(50, 10, 190, 20);

        jPanel2.add(jPanel7);
        jPanel7.setBounds(490, 111, 290, 390);

        jPanel13.setLayout(null);

        jButton6.setText("Xóa");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton6);
        jButton6.setBounds(340, 10, 93, 30);

        jButton7.setText("Sửa");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton7);
        jButton7.setBounds(464, 10, 90, 30);

        jButton8.setText("Thoát");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton8);
        jButton8.setBounds(600, 10, 93, 30);

        jButton9.setText("Thêm");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton9);
        jButton9.setBounds(70, 10, 94, 30);

        jButton10.setText("Lưu");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel13.add(jButton10);
        jButton10.setBounds(210, 10, 93, 30);

        jPanel2.add(jPanel13);
        jPanel13.setBounds(10, 520, 770, 50);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Mã hóa đơn:");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(80, 20, 110, 22);

        jTabbedPane1.addTab("Hóa Đơn", jPanel2);

        jPanel5.setLayout(null);

        jTextField4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField4.setToolTipText("");
        jPanel5.add(jTextField4);
        jTextField4.setBounds(190, 20, 280, 30);
        jPanel5.add(jSeparator3);
        jSeparator3.setBounds(0, 71, 785, 13);

        jToggleButton3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jToggleButton3.setText("Tìm kiếm");
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });
        jPanel5.add(jToggleButton3);
        jToggleButton3.setBounds(500, 20, 97, 30);

        jLabel24.setText("Phiếu Thu Tiền");
        jPanel5.add(jLabel24);
        jLabel24.setBounds(20, 80, 180, 20);

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        jPanel5.add(jScrollPane3);
        jScrollPane3.setBounds(10, 100, 470, 400);

        jPanel8.setLayout(null);

        jLabel25.setText("Mã PT:");
        jPanel8.add(jLabel25);
        jLabel25.setBounds(20, 70, 110, 25);

        jLabel26.setText("Họ Tên KH:");
        jPanel8.add(jLabel26);
        jLabel26.setBounds(20, 110, 90, 25);

        jLabel27.setText("SĐT:");
        jPanel8.add(jLabel27);
        jLabel27.setBounds(20, 150, 70, 25);

        jLabel28.setText("Email:");
        jPanel8.add(jLabel28);
        jLabel28.setBounds(20, 190, 90, 25);

        jLabel29.setText("Địa Chỉ:");
        jPanel8.add(jLabel29);
        jLabel29.setBounds(20, 230, 110, 20);

        jLabel30.setText("Ngày Thu Tiền:");
        jPanel8.add(jLabel30);
        jLabel30.setBounds(20, 270, 120, 25);

        jLabel31.setText("Số Tiền Thu:");
        jPanel8.add(jLabel31);
        jLabel31.setBounds(20, 310, 100, 25);
        jPanel8.add(jTextField23);
        jTextField23.setBounds(110, 310, 180, 25);
        jPanel8.add(jTextField24);
        jTextField24.setBounds(110, 270, 180, 25);
        jPanel8.add(jTextField25);
        jTextField25.setBounds(110, 230, 180, 25);
        jPanel8.add(jTextField26);
        jTextField26.setBounds(110, 190, 180, 25);
        jPanel8.add(jTextField27);
        jTextField27.setBounds(110, 150, 180, 25);
        jPanel8.add(jTextField28);
        jTextField28.setBounds(110, 110, 180, 25);
        jPanel8.add(jTextField29);
        jTextField29.setBounds(110, 70, 180, 25);

        jLabel33.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel33.setText("Phiếu Nhập Thu Tiền");
        jPanel8.add(jLabel33);
        jLabel33.setBounds(40, 10, 230, 30);

        jPanel5.add(jPanel8);
        jPanel8.setBounds(480, 100, 300, 400);

        jPanel14.setLayout(null);

        jButton11.setText("Xóa");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel14.add(jButton11);
        jButton11.setBounds(340, 10, 93, 30);

        jButton12.setText("Sửa");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel14.add(jButton12);
        jButton12.setBounds(460, 10, 94, 30);

        jButton13.setText("Thoát");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel14.add(jButton13);
        jButton13.setBounds(600, 10, 93, 30);

        jButton14.setText("Thêm");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel14.add(jButton14);
        jButton14.setBounds(70, 10, 94, 30);

        jButton15.setText("Lưu");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel14.add(jButton15);
        jButton15.setBounds(210, 10, 93, 30);

        jPanel5.add(jPanel14);
        jPanel14.setBounds(10, 510, 770, 50);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Mã PT,tên KH:");
        jPanel5.add(jLabel12);
        jLabel12.setBounds(70, 30, 130, 16);

        jTabbedPane1.addTab("Phiếu Thu Tiền", jPanel5);

        jPanel6.setLayout(null);
        jPanel6.add(jSeparator4);
        jSeparator4.setBounds(0, 71, 785, 13);

        jTextField5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField5.setToolTipText("");
        jPanel6.add(jTextField5);
        jTextField5.setBounds(200, 20, 270, 30);

        jToggleButton4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jToggleButton4.setText("Tìm kiếm");
        jToggleButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton4ActionPerformed(evt);
            }
        });
        jPanel6.add(jToggleButton4);
        jToggleButton4.setBounds(490, 20, 100, 30);

        jLabel34.setText("Báo Cáo Tồn");
        jPanel6.add(jLabel34);
        jLabel34.setBounds(20, 80, 180, 20);

        jTable4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable4MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable4);

        jPanel6.add(jScrollPane4);
        jScrollPane4.setBounds(10, 100, 470, 390);

        jPanel10.setLayout(null);

        jLabel36.setText("Tháng:");
        jPanel10.add(jLabel36);
        jLabel36.setBounds(30, 110, 130, 25);

        jLabel37.setText("Mã PN:");
        jPanel10.add(jLabel37);
        jLabel37.setBounds(30, 150, 110, 25);

        jLabel39.setText("Tồn Đầu:");
        jPanel10.add(jLabel39);
        jLabel39.setBounds(30, 190, 100, 25);

        jLabel42.setText("Phát Sinh:");
        jPanel10.add(jLabel42);
        jLabel42.setBounds(30, 230, 130, 20);

        jLabel41.setText("Tồn Cuối");
        jPanel10.add(jLabel41);
        jLabel41.setBounds(30, 270, 110, 25);
        jPanel10.add(jTextField35);
        jTextField35.setBounds(110, 270, 180, 25);
        jPanel10.add(jTextField34);
        jTextField34.setBounds(110, 230, 180, 25);
        jPanel10.add(jTextField33);
        jTextField33.setBounds(110, 190, 180, 25);
        jPanel10.add(jTextField30);
        jTextField30.setBounds(110, 110, 180, 25);

        jLabel52.setText("Mã BCT:");
        jPanel10.add(jLabel52);
        jLabel52.setBounds(30, 70, 110, 25);
        jPanel10.add(jTextField43);
        jTextField43.setBounds(110, 70, 180, 25);

        Cmb_MAPNT.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jPanel10.add(Cmb_MAPNT);
        Cmb_MAPNT.setBounds(110, 150, 180, 24);

        jLabel35.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel35.setText("Phiếu Báo Cáo Tồn");
        jPanel10.add(jLabel35);
        jLabel35.setBounds(70, 10, 210, 30);

        jPanel6.add(jPanel10);
        jPanel10.setBounds(480, 100, 300, 390);

        jPanel15.setLayout(null);

        jButton16.setText("Xóa");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel15.add(jButton16);
        jButton16.setBounds(340, 10, 93, 30);

        jButton17.setText("Sửa");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });
        jPanel15.add(jButton17);
        jButton17.setBounds(460, 10, 94, 30);

        jButton18.setText("Thoát");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });
        jPanel15.add(jButton18);
        jButton18.setBounds(600, 10, 93, 30);

        jButton19.setText("Thêm");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });
        jPanel15.add(jButton19);
        jButton19.setBounds(70, 10, 94, 30);

        jButton20.setText("Lưu");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });
        jPanel15.add(jButton20);
        jButton20.setBounds(210, 10, 93, 30);

        jPanel6.add(jPanel15);
        jPanel15.setBounds(10, 520, 770, 50);

        jTabbedPane1.addTab("Báo Cáo Tồn", jPanel6);

        jPanel11.setLayout(null);

        jTextField6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTextField6.setToolTipText("");
        jPanel11.add(jTextField6);
        jTextField6.setBounds(200, 20, 270, 30);

        jPanel12.setLayout(null);

        jLabel40.setText("Tháng:");
        jPanel12.add(jLabel40);
        jLabel40.setBounds(30, 90, 90, 25);

        jLabel43.setText("Mã PT:");
        jPanel12.add(jLabel43);
        jLabel43.setBounds(30, 130, 100, 25);

        jLabel44.setText("Họ Tên KH:");
        jPanel12.add(jLabel44);
        jLabel44.setBounds(30, 170, 110, 25);

        jLabel45.setText("Nợ Đầu:");
        jPanel12.add(jLabel45);
        jLabel45.setBounds(30, 210, 110, 25);

        jLabel46.setText("Phát Sinh:");
        jPanel12.add(jLabel46);
        jLabel46.setBounds(30, 250, 100, 20);

        jLabel47.setText("Nợ Cuối");
        jPanel12.add(jLabel47);
        jLabel47.setBounds(30, 290, 110, 25);
        jPanel12.add(jTextField36);
        jTextField36.setBounds(110, 290, 180, 25);
        jPanel12.add(jTextField37);
        jTextField37.setBounds(110, 250, 180, 25);

        jTextField38.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField38ActionPerformed(evt);
            }
        });
        jPanel12.add(jTextField38);
        jTextField38.setBounds(110, 210, 180, 25);
        jPanel12.add(jTextField39);
        jTextField39.setBounds(110, 170, 180, 25);
        jPanel12.add(jTextField41);
        jTextField41.setBounds(110, 90, 180, 25);

        jLabel51.setText("Mã BCCN:");
        jPanel12.add(jLabel51);
        jLabel51.setBounds(30, 50, 110, 25);
        jPanel12.add(jTextField42);
        jTextField42.setBounds(110, 50, 180, 25);

        Cmb_MAPTB.setFont(new java.awt.Font("Segoe UI", 0, 13)); // NOI18N
        jPanel12.add(Cmb_MAPTB);
        Cmb_MAPTB.setBounds(110, 130, 180, 24);

        jLabel48.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel48.setText("Phiếu Báo Cáo Công Nợ");
        jPanel12.add(jLabel48);
        jLabel48.setBounds(60, 10, 210, 30);

        jPanel11.add(jPanel12);
        jPanel12.setBounds(480, 100, 300, 390);

        jTable5.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable5MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jTable5);

        jPanel11.add(jScrollPane5);
        jScrollPane5.setBounds(10, 100, 470, 390);

        jLabel49.setText("Báo Cáo Công Nợ");
        jPanel11.add(jLabel49);
        jLabel49.setBounds(20, 80, 160, 20);

        jToggleButton5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jToggleButton5.setText("Tìm kiếm");
        jToggleButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton5ActionPerformed(evt);
            }
        });
        jPanel11.add(jToggleButton5);
        jToggleButton5.setBounds(490, 20, 97, 30);
        jPanel11.add(jSeparator5);
        jSeparator5.setBounds(0, 71, 785, 13);

        jPanel16.setLayout(null);

        jButton21.setText("Xóa");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });
        jPanel16.add(jButton21);
        jButton21.setBounds(340, 10, 93, 30);

        jButton22.setText("Sửa");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });
        jPanel16.add(jButton22);
        jButton22.setBounds(460, 10, 94, 30);

        jButton23.setText("Thoát");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });
        jPanel16.add(jButton23);
        jButton23.setBounds(600, 10, 93, 30);

        jButton24.setText("Thêm");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });
        jPanel16.add(jButton24);
        jButton24.setBounds(70, 10, 94, 30);

        jButton25.setText("Lưu");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });
        jPanel16.add(jButton25);
        jButton25.setBounds(210, 10, 93, 30);

        jPanel11.add(jPanel16);
        jPanel16.setBounds(10, 520, 770, 50);

        jTabbedPane1.addTab("Báo Cáo Công Nợ", jPanel11);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(10, 70, 790, 620);

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("QUẢN LÝ NHÀ SÁCH");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(280, 30, 240, 29);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public boolean varsave = false;
    private void jTextField19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField19ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField19ActionPerformed
//nut tim kiem phieu nhap
    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        String sql1 = "SELECT MAPN AS N'Mã sách', TENSACH,THELOAI,TACGIA,SL from PHIEUNHAPSACH where MAPN like N'%" + this.jTextField2.getText() + "%' OR TENSACH LIKE N'%"+this.jTextField2.getText()+"%'";
        SearchS(jTextField2,sqlSach,sql1,jTable1);
    }//GEN-LAST:event_jToggleButton1ActionPerformed
//nut them phieu nhap
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        jTextField22.setEditable(false);
        jTextField22.setBackground(Color.lightGray);
        ResetAllPN();
        varsave = true;
    }//GEN-LAST:event_jButton4ActionPerformed
    public void ResetAllPN() {
        jTextField22.setText("");
        jTextField10.setText("");
        jTextField9.setText("");
        jTextField11.setText("");
        jTextField13.setText("");
        jTextField8.setText("");
    }

    //nut luu phieu nhap
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (varsave == true) {
            StringBuilder sb = new StringBuilder();
            if (jTextField10.getText().equals("")) {
                sb.append("Tên sách không được để trống");
                jTextField10.setBackground(Color.red);
            } else {
                jTextField10.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (jTextField9.getText().equals("")) {
                sb.append("Thể loại không được để trống");
                jTextField9.setBackground(Color.red);
            } else {
                jTextField9.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (jTextField11.getText().equals("")) {
                sb.append("Tên tác giả không được để trống");
                jTextField11.setBackground(Color.red);
            } else {
                jTextField11.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (jTextField13.getText().equals("")) {
                sb.append("Ngày nhập không được để trống");
                jTextField13.setBackground(Color.red);
            } else {
                jTextField13.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (jTextField8.getText().equals("")) {
                sb.append("Số lượng không được để trống");
                jTextField8.setBackground(Color.red);
            } else {
                jTextField8.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (Integer.parseInt(jTextField8.getText()) <= 149) {
                sb.append("Số lượng phải lớn hơn 150");
                jTextField8.setBackground(Color.red);
            } else {
                jTextField8.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }

            if (JOptionPane.showConfirmDialog(this, " Bạn có muốn thêm sách không?") == JOptionPane.NO_OPTION) {
                return;

            } else {
                try {
                    PHIEUNHAPSACH pns = new PHIEUNHAPSACH();
                    pns.setNGAYNHAP(java.sql.Date.valueOf(jTextField13.getText()));
                    pns.setTENSACH(jTextField10.getText());
                    pns.setTHELOAI(jTextField9.getText());
                    pns.setTACGIA(jTextField11.getText());
                    pns.setSL(Integer.parseInt(jTextField8.getText()));
                    TXSPHIEUNHAPSACH txspns = new TXSPHIEUNHAPSACH();
                    txspns.insert(pns);
                    JOptionPane.showMessageDialog(this, "Sách mới đã được lưu vào CSDL");
                    varsave = false;
                    UpdateTable.LoadData(sqlSach, jTable1);
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                    e.printStackTrace();
                }
            }
        } else
            JOptionPane.showMessageDialog(this, "Bạn chưa nhấn nút Thêm !");
    }//GEN-LAST:event_jButton5ActionPerformed
//nut sua phieu nhap
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        StringBuilder sb = new StringBuilder();
        if (jTextField10.getText().equals("")) {
            sb.append("Tên sách không được để trống");
            jTextField10.setBackground(Color.red);
        } else {
            jTextField10.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (jTextField9.getText().equals("")) {
            sb.append("Thể loại không được để trống");
            jTextField9.setBackground(Color.red);
        } else {
            jTextField9.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (jTextField11.getText().equals("")) {
            sb.append("Tên tác giả không được để trống");
            jTextField11.setBackground(Color.red);
        } else {
            jTextField11.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (jTextField13.getText().equals("")) {
            sb.append("Ngày nhập không được để trống");
            jTextField13.setBackground(Color.red);
        } else {
            jTextField13.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (Integer.parseInt(jTextField8.getText()) <= 149) {
            sb.append("Số lượng phải lớn hơn 150");
            jTextField8.setBackground(Color.red);
        } else {
            jTextField8.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (jTextField8.getText().equals("")) {
            sb.append("Số lượng không được để trống");
            jTextField8.setBackground(Color.red);
        } else {
            jTextField8.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (JOptionPane.showConfirmDialog(this, " Bạn có muốn sửa sách không?") == JOptionPane.NO_OPTION) {
            return;
        } else {
            try {
                PHIEUNHAPSACH pns = new PHIEUNHAPSACH();
                pns.setMAPN(Integer.parseInt(jTextField22.getText()));
                pns.setNGAYNHAP(java.sql.Date.valueOf(jTextField13.getText()));
                pns.setTENSACH(jTextField10.getText());
                pns.setTHELOAI(jTextField9.getText());
                pns.setTACGIA(jTextField11.getText());
                pns.setSL(Integer.parseInt(jTextField8.getText()));
                TXSPHIEUNHAPSACH txspns = new TXSPHIEUNHAPSACH();
                txspns.update(pns);
                JOptionPane.showMessageDialog(this, "Sách mới đã được sửa vào CSDL");
                UpdateTable.LoadData(sqlSach, jTable1);    
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                e.printStackTrace();
            }
        }


    }//GEN-LAST:event_jButton2ActionPerformed
//nut xoa phieu nhap
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (jTextField22.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn dữ liệu cần xóa! Vui lòng chọn lại");
            jTextField22.setBackground(Color.red); // Cai tien ne
        } else {
            if (JOptionPane.showConfirmDialog(this, " Bạn có muốn xóa phiếu nhập sách nhập không?") == JOptionPane.NO_OPTION) {
                return;
            }
            try {
                try (Connection ketNoi = CSDL.getKetNoi()) {
                    ResultSet rs;
                    ResultSet rs2;
                    String strsql = "Select * from BAOCAOTON where MAPN=?";
                    String strsql2 = "Select * from HOADONBANSACH where MAPN=?";
                    PreparedStatement ps = ketNoi.prepareCall(strsql);
                    PreparedStatement ps2 = ketNoi.prepareCall(strsql2);
                    ps.setInt(1, Integer.parseInt(jTextField22.getText()));
                    ps2.setInt(1, Integer.parseInt(jTextField22.getText()));
                    rs = ps.executeQuery();
                    rs2 = ps2.executeQuery();
                    if (rs.next()) {
                        JOptionPane.showMessageDialog(this, "Không thể xóa, xin vui lòng xóa báo cáo tồn tương ứng !");
                    } else if (rs2.next()) {
                        JOptionPane.showMessageDialog(this, "Không thể xóa, xin vui lòng xóa hóa đơn tương ứng !");
                    } else {
                        TXSPHIEUNHAPSACH txspns = new TXSPHIEUNHAPSACH();
                        txspns.delete(Integer.parseInt(jTextField22.getText()));
                        JOptionPane.showMessageDialog(this, "Phiếu nhập sách đã được xóa khỏi CSDL");
                        UpdateTable.LoadData(sqlSach, jTable1);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                    e.printStackTrace();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
//nut thoat phieu nhap
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Exit();
    }//GEN-LAST:event_jButton3ActionPerformed
//nut xoa hoa don
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        if (jTextField19.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn dữ liệu cần xóa! Vui lòng chọn lại");
            jTextField19.setBackground(Color.red); // Cai tien ne
        } else {
            if (JOptionPane.showConfirmDialog(this, " Bạn có muốn xóa hóa đơn nhập không?") == JOptionPane.NO_OPTION) {
                return;
            }
            try {
//            try(Connection ketNoi=CSDL.getKetNoi()){
//                ResultSet rs;
//                String strsql = "Select * from HOADONBANSACH where MAHD=?";
//                PreparedStatement ps= ketNoi.prepareCall(strsql);
//                ps.setInt(1,Integer.parseInt(jTextField22.getText()));
//                rs=ps.executeQuery();
//                if(rs.next()){
//                    JOptionPane.showMessageDialog(this,"LỖI SÁCH CÓ BAO CAO TON SÁCH CẦN XÓA BAOCAOTON CUA SÁCH TƯƠNG ỨNG !");
//                }
//                else{
                TXS2 txs2 = new TXS2();
                txs2.delete(Integer.parseInt(jTextField19.getText()));
                JOptionPane.showMessageDialog(this, "Phiếu nhập sách đã được xóa khỏi CSDL");
                UpdateTable.LoadData(sqlHDSach, jTable2);
//                }
//            }
//           catch (Exception e){
//           JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
//           e.printStackTrace();
//       }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed
//nut sua hoa don
    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        if (jTextField14.getText().equals("")) {
            sb.append("Ngày lập hóa đơn không được để trống");
            jTextField14.setBackground(Color.red);
        } else {
            jTextField14.setBackground(Color.white);
        }
        if (Cmb_MAPT.getSelectedItem() == null) {
            sb.append("Vui lòng chọn mã phiếu thu !");
            Cmb_MAPT.setBackground(Color.red);
        } else {
            Cmb_MAPT.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (Cmb_MAPN.getSelectedItem() == null) {
            sb.append("Vui lòng chọn mã phiếu nhập !");
            Cmb_MAPN.setBackground(Color.red);
        } else {
            Cmb_MAPN.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (Cmb_MABCCN.getSelectedItem() == null) {
            sb.append("Vui lòng chọn mã báo cáo công nợ !");
            Cmb_MABCCN.setBackground(Color.red);
        } else {
            Cmb_MABCCN.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (jTextField21.getText().equals("")) {
            sb.append("Số lượng tồn không được để trống");
            jTextField21.setBackground(Color.red);
        } else {
            jTextField21.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (jTextField15.getText().equals("")) {
            sb.append("Đơn giá tồn không được để trống");
            jTextField15.setBackground(Color.red);
        } else {
            jTextField15.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (JOptionPane.showConfirmDialog(this, " Bạn có muốn sửa hóa đơn không?") == JOptionPane.NO_OPTION) {
            return;
        } else {
            try {
                HOADONBANSACH hdbs = new HOADONBANSACH();
                hdbs.setMAHD(Integer.parseInt(jTextField19.getText()));
                hdbs.setMAPT(Integer.parseInt((String) Cmb_MAPT.getSelectedItem()));
                hdbs.setMAPN(Integer.parseInt((String) Cmb_MAPN.getSelectedItem()));
                hdbs.setMABCCN(Integer.parseInt((String) Cmb_MABCCN.getSelectedItem()));
                hdbs.setNGAYLAPHOADON(java.sql.Date.valueOf(jTextField14.getText()));
                hdbs.setSL(Integer.parseInt(jTextField21.getText()));
                hdbs.setDONGIA(Integer.parseInt(jTextField15.getText()));

                TXS2 txs2 = new TXS2();
                txs2.update(hdbs);
                JOptionPane.showMessageDialog(null, "Dữ liệu bạn sửa vào thành công", "Thông báo", 1);
                UpdateTable.LoadData(sqlHDSach, jTable2);
                ResetAllHD();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                e.printStackTrace();
            }
//       }catch (Exception e){
//           JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
//           e.printStackTrace();
        }


    }//GEN-LAST:event_jButton7ActionPerformed
//nut thoat hoa don
    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        Exit();
    }//GEN-LAST:event_jButton8ActionPerformed
//nut them hoa don
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        jTextField19.setEditable(false);
        jTextField19.setBackground(Color.lightGray);
        jTextField20.setEditable(false);
        jTextField20.setBackground(Color.lightGray);
        ResetAllHD();
        varsave = true;

    }//GEN-LAST:event_jButton9ActionPerformed
    public void ResetAllHD() {
        jTextField19.setText("");
        jTextField14.setText("");
        Cmb_MAPT.setSelectedItem(null);
        Cmb_MAPN.setSelectedItem(null);
        Cmb_MABCCN.setSelectedItem(null);
        jTextField20.setText("");
        jTextField21.setText("");
        jTextField15.setText("");
    }

    //nut luu hoa don
    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        if (varsave == true) {
            StringBuilder sb = new StringBuilder();
            if (jTextField14.getText().equals("")) {
                sb.append("Ngày lập hóa đơn không được để trống");
                jTextField14.setBackground(Color.red);
            } else {
                jTextField14.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (Cmb_MAPT.getSelectedItem() == null) {
                sb.append("Vui lòng chọn mã phiếu thu !");
                Cmb_MAPT.setBackground(Color.red);
            } else {
                Cmb_MAPT.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (Cmb_MAPN.getSelectedItem() == null) {
                sb.append("Vui lòng chọn mã phiếu nhập !");
                Cmb_MAPN.setBackground(Color.red);
            } else {
                Cmb_MAPN.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (Cmb_MABCCN.getSelectedItem() == null) {
                sb.append("Vui lòng chọn mã báo cáo công nợ !");
                Cmb_MABCCN.setBackground(Color.red);
            } else {
                Cmb_MABCCN.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (jTextField21.getText().equals("")) {
                sb.append("Số lượng tồn không được để trống");
                jTextField21.setBackground(Color.red);
            } else {
                jTextField21.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (jTextField15.getText().equals("")) {
                sb.append("Đơn giá tồn không được để trống");
                jTextField15.setBackground(Color.red);
            } else {
                jTextField15.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (JOptionPane.showConfirmDialog(this, " Bạn có muốn thêm hóa đơn không?") == JOptionPane.NO_OPTION) {
                return;

            } else {
//           try{
                try {
                    HOADONBANSACH hdbs = new HOADONBANSACH();
                    hdbs.setNGAYLAPHOADON(java.sql.Date.valueOf(jTextField14.getText()));
                    hdbs.setMAPT(Integer.parseInt((String) Cmb_MAPT.getSelectedItem()));
                    hdbs.setMAPN(Integer.parseInt((String) Cmb_MAPN.getSelectedItem()));
                    hdbs.setMABCCN(Integer.parseInt((String) Cmb_MABCCN.getSelectedItem()));
                    hdbs.setSL(Integer.parseInt(jTextField21.getText()));
                    hdbs.setDONGIA(Integer.parseInt(jTextField15.getText()));

                    TXS2 txs2 = new TXS2();
                    txs2.insert(hdbs);
                    JOptionPane.showMessageDialog(null, "Dữ liệu bạn nhập vào thành công", "Thông báo", 1);
                    UpdateTable.LoadData(sqlHDSach, jTable2);
                    ResetAllHD();
                    varsave = false;
//        }}
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
                } catch (Exception ex) {
                    Logger.getLogger(QLNS.class.getName()).log(Level.SEVERE, null, ex);
                }

//       }catch (Exception e){
//           JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
//           e.printStackTrace();
//       }}
//       catch (Exception e){
//           JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
//           e.printStackTrace();
//       }}
            }
        } else
            JOptionPane.showMessageDialog(this, "Bạn chưa nhấn nút Thêm !");
    }//GEN-LAST:event_jButton10ActionPerformed
//nut xoa phieu thu
    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:

        if (jTextField29.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn dữ liệu cần xóa! Vui lòng chọn lại");
            jTextField29.setBackground(Color.red); // Cai tien ne
        } else {
            if (JOptionPane.showConfirmDialog(this, " Bạn có muốn xóa phiếu thu tiền không?") == JOptionPane.NO_OPTION) {
                return;
            }
            try {
                try (Connection ketNoi = CSDL.getKetNoi()) {
                    ResultSet rs;
                    String strsql = "Select * from BAOCAOCONGNO where MAPT=?";
                    PreparedStatement ps = ketNoi.prepareCall(strsql);
                    ps.setInt(1, Integer.parseInt(jTextField29.getText()));
                    rs = ps.executeQuery();
                    if (rs.next()) {
                        JOptionPane.showMessageDialog(this, "Không thể xóa, xin vui lòng xóa báo cáo công nợ tương ứng !");
                    } else {
                        TXS3 txs3 = new TXS3();
                        txs3.delete(Integer.parseInt(jTextField29.getText()));
                        JOptionPane.showMessageDialog(this, "Phiếu thu tiền đã được xóa khỏi CSDL");
                        UpdateTable.LoadData(sqlPTTien, jTable3);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                    e.printStackTrace();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton11ActionPerformed
//nut sua phieu thu
    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:

        StringBuilder sb = new StringBuilder();
        if (jTextField29.getText().equals("")) {
            sb.append("Mã phiếu thu không được để trống");
            jTextField29.setBackground(Color.red);
        } else {
            jTextField29.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (jTextField28.getText().equals("")) {
            sb.append("Họ tên khách hàng không được để trống");
            jTextField28.setBackground(Color.red);
        } else {
            jTextField28.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (jTextField27.getText().equals("")) {
            sb.append("Số điện thoại không được để trống");
            jTextField27.setBackground(Color.red);
        } else {
            jTextField27.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (jTextField26.getText().equals("")) {
            sb.append("Email không được để trống");
            jTextField26.setBackground(Color.red);
        } else {
            jTextField26.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (jTextField25.getText().equals("")) {
            sb.append("Địa chỉ không được để trống");
            jTextField25.setBackground(Color.red);
        } else {
            jTextField25.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (jTextField24.getText().equals("")) {
            sb.append("Ngày thu tiền không được để trống");
            jTextField24.setBackground(Color.red);
        } else {
            jTextField24.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (jTextField23.getText().equals("")) {
            sb.append("Số tiền thu không được để trống");
            jTextField23.setBackground(Color.red);
        } else {
            jTextField23.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (JOptionPane.showConfirmDialog(this, " Bạn có muốn sửa phiếu thu tiền không?") == JOptionPane.NO_OPTION) {
            return;

        } else {
            try {
                PHIEUTHUTIEN ptt = new PHIEUTHUTIEN();
                ptt.setHOTENKH(jTextField28.getText());
                ptt.setSDT(jTextField27.getText());
                ptt.setEMAIL(jTextField26.getText());
                ptt.setDIACHI(jTextField25.getText());
                ptt.setNGAYTHUTIEN(java.sql.Date.valueOf(jTextField24.getText()));
                ptt.setSOTIENTHU(Integer.parseInt(jTextField23.getText()));
                ptt.setMAPT(Integer.parseInt(jTextField29.getText()));
                TXS3 txs3 = new TXS3();
                txs3.update(ptt);
               UpdateTable.LoadData(sqlPTTien, jTable3);
                JOptionPane.showMessageDialog(this, "Phiếu thu mới đã được sửa vào CSDL");

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton12ActionPerformed
//nut thoat phieu thu
    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        Exit();
    }//GEN-LAST:event_jButton13ActionPerformed
//nut them phieu thu tien
    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        jTextField29.setEditable(false);
        jTextField29.setBackground(Color.lightGray);
        ResetAllPTT();
        varsave = true;
    }//GEN-LAST:event_jButton14ActionPerformed
    public void ResetAllPTT() {
        jTextField29.setText("");
        jTextField28.setText("");
        jTextField27.setText("");
        jTextField26.setText("");
        jTextField25.setText("");
        jTextField24.setText("");
        jTextField23.setText("");
    }
//nut luu phieu thu tien
    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        if (varsave == true) {
            StringBuilder sb = new StringBuilder();

            if (jTextField28.getText().equals("")) {
                sb.append("Họ tên khách hàng không được để trống");
                jTextField28.setBackground(Color.red);
            } else {
                jTextField28.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (jTextField27.getText().equals("")) {
                sb.append("Số điện thoại không được để trống");
                jTextField27.setBackground(Color.red);
            } else {
                jTextField27.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (jTextField26.getText().equals("")) {
                sb.append("Email không được để trống");
                jTextField26.setBackground(Color.red);
            } else {
                jTextField26.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (jTextField25.getText().equals("")) {
                sb.append("Địa chỉ không được để trống");
                jTextField25.setBackground(Color.red);
            } else {
                jTextField25.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (jTextField24.getText().equals("")) {
                sb.append("Ngày thu tiền không được để trống");
                jTextField24.setBackground(Color.red);
            } else {
                jTextField24.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (jTextField23.getText().equals("")) {
                sb.append("Số tiền thu không được để trống");
                jTextField23.setBackground(Color.red);
            } else {
                jTextField23.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (JOptionPane.showConfirmDialog(this, " Bạn có muốn thêm phiếu thu không?") == JOptionPane.NO_OPTION) {
                return;

            } else {
                try {
                    PHIEUTHUTIEN ptt = new PHIEUTHUTIEN();
                    ptt.setHOTENKH(jTextField28.getText());
                    ptt.setSDT(jTextField27.getText());
                    ptt.setEMAIL(jTextField26.getText());
                    ptt.setDIACHI(jTextField25.getText());
                    ptt.setNGAYTHUTIEN(java.sql.Date.valueOf(jTextField24.getText()));
                    ptt.setSOTIENTHU(Integer.parseInt(jTextField23.getText()));
                    TXS3 txs3 = new TXS3();
                    txs3.insert(ptt);
                    JOptionPane.showMessageDialog(this, "Phiếu thu tiền mới đã được lưu vào CSDL");
                    UpdateTable.LoadData(sqlPTTien, jTable3);
                    ResetAllPTT();
                    varsave = false;
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                    e.printStackTrace();
                }
            }
        } else
            JOptionPane.showMessageDialog(this, "Bạn chưa nhấn nút Thêm !");
    }//GEN-LAST:event_jButton15ActionPerformed
//nut xoa bao cao ton
    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        if (jTextField43.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn dữ liệu cần xóa! Vui lòng chọn lại");
            jTextField43.setBackground(Color.red); // Cai tien ne
        } else {
            if (JOptionPane.showConfirmDialog(this, " Bạn có muốn xóa báo cáo tồn không?") == JOptionPane.NO_OPTION) {
                return;
            }
            try {
//            try(Connection ketNoi=CSDL.getKetNoi()){
//                ResultSet rs;
//                String strsql = "Select * from HOADONBANSACH where MAHD=?";
//                PreparedStatement ps= ketNoi.prepareCall(strsql);
//                ps.setInt(1,Integer.parseInt(jTextField22.getText()));
//                rs=ps.executeQuery();
//                if(rs.next()){
//                    JOptionPane.showMessageDialog(this,"LỖI SÁCH CÓ BAO CAO TON SÁCH CẦN XÓA BAOCAOTON CUA SÁCH TƯƠNG ỨNG !");
//                }
//                else{
                TXS4 txs4 = new TXS4();
                txs4.delete(Integer.parseInt(jTextField43.getText()));
                JOptionPane.showMessageDialog(this, "Báo cáo tồn đã được xóa khỏi CSDL");
                UpdateTable.LoadData(sqlBCTon, jTable4);
//                }
//            }
//           catch (Exception e){
//           JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
//           e.printStackTrace();
//       }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton16ActionPerformed
//nut sua bao cao ton
    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        if (jTextField30.getText().equals("")) {
            sb.append("Tháng không được để trống");
            jTextField30.setBackground(Color.red);
        } else {
            jTextField30.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (Cmb_MAPNT.getSelectedItem() == null) {
            sb.append("Vui lòng chọn mã phiếu nhập !");
            Cmb_MAPNT.setBackground(Color.red);
        } else {
            Cmb_MAPNT.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (jTextField33.getText().equals("")) {
            sb.append("Tồn đầu không được để trống");
            jTextField33.setBackground(Color.red);
        } else {
            jTextField33.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (jTextField34.getText().equals("")) {
            sb.append("Phát sinh không được để trống");
            jTextField34.setBackground(Color.red);
        } else {
            jTextField34.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (JOptionPane.showConfirmDialog(this, " Bạn có muốn sửa báo cáo tồn không?") == JOptionPane.NO_OPTION) {
            return;
        } else {
            try {
                BAOCATON bct = new BAOCATON();
                bct.setTHANG(jTextField30.getText());
                bct.setMAPN(Integer.parseInt((String) Cmb_MAPNT.getSelectedItem()));
                bct.setTONDAU(Integer.parseInt(jTextField33.getText()));
                bct.setPHATSINH(Integer.parseInt(jTextField34.getText()));
                bct.setMABCT(Integer.parseInt(jTextField43.getText()));
                TXS4 txs4 = new TXS4();
                txs4.update(bct);
                UpdateTable.LoadData(sqlBCTon, jTable4);
                JOptionPane.showMessageDialog(this, "Báo cáo tồn mới đã được sửa vào CSDL");

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton17ActionPerformed
//nut thoat bao cao ton
    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        Exit();
    }//GEN-LAST:event_jButton18ActionPerformed
//nut them bao cao ton
    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        jTextField43.setEditable(false);
        jTextField43.setBackground(Color.lightGray);
        jTextField35.setEditable(false);
        jTextField35.setBackground(Color.lightGray);
        ResetAllBCT();
        varsave = true;
    }//GEN-LAST:event_jButton19ActionPerformed
    public void ResetAllBCT() {
        jTextField43.setText("");
        jTextField30.setText("");
        Cmb_MAPNT.setSelectedItem(null);
        jTextField33.setText("");
        jTextField34.setText("");
        jTextField35.setText("");
    }
//nut luu bao cao ton
    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        if (varsave == true) {
            StringBuilder sb = new StringBuilder();
            if (jTextField30.getText().equals("")) {
                sb.append("Tháng không được để trống");
                jTextField30.setBackground(Color.red);
            } else {
                jTextField30.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (Cmb_MAPNT.getSelectedItem() == null) {
                sb.append("Vui lòng chọn mã phiếu nhập !");
                Cmb_MAPNT.setBackground(Color.red);
            } else {
                Cmb_MAPNT.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (jTextField33.getText().equals("")) {
                sb.append("Tồn đầu không được để trống");
                jTextField33.setBackground(Color.red);
            } else {
                jTextField33.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (jTextField34.getText().equals("")) {
                sb.append("Phát sinh không được để trống");
                jTextField34.setBackground(Color.red);
            } else {
                jTextField34.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (JOptionPane.showConfirmDialog(this, " Bạn có muốn thêm báo cáo tồn không?") == JOptionPane.NO_OPTION) {
                return;

            } else {
                try {
                    BAOCATON bct = new BAOCATON();
                    bct.setTHANG(jTextField30.getText());
                    bct.setMAPN(Integer.parseInt((String) Cmb_MAPNT.getSelectedItem()));
                    bct.setTONDAU(Integer.parseInt(jTextField33.getText()));
                    bct.setPHATSINH(Integer.parseInt(jTextField34.getText()));
                    TXS4 txs4 = new TXS4();
                    txs4.insert(bct);
                    UpdateTable.LoadData(sqlBCTon, jTable4);
                    JOptionPane.showMessageDialog(this, "Báo cáo tồn mới đã được lưu vào CSDL");
                    varsave = false;
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                    e.printStackTrace();
                }
            }
        } else
            JOptionPane.showMessageDialog(this, "Bạn chưa nhấn nút Thêm !");
    }//GEN-LAST:event_jButton20ActionPerformed
//nut xoa bao cao cong no
    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
        if (jTextField42.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn dữ liệu cần xóa! Vui lòng chọn lại");
            jTextField42.setBackground(Color.red); // Cai tien ne
        } else {
            if (JOptionPane.showConfirmDialog(this, " Bạn có muốn xóa phiếu báo cáo công nợ không?") == JOptionPane.NO_OPTION) {
                return;
            }
            try {
                try (Connection ketNoi = CSDL.getKetNoi()) {
                    ResultSet rs;
                    String strsql = "Select * from HOADONBANSACH where MABCCN=?";
                    PreparedStatement ps = ketNoi.prepareCall(strsql);
                    ps.setInt(1, Integer.parseInt(jTextField42.getText()));
                    rs = ps.executeQuery();
                    if (rs.next()) {
                        JOptionPane.showMessageDialog(this, "Không thể xóa, xin vui lòng xóa hóa đơn bán sách tương ứng !");
                    } else {
                        TXS5 txs5 = new TXS5();
                        txs5.delete(Integer.parseInt(jTextField42.getText()));
                        JOptionPane.showMessageDialog(this, "Báo cáo công nợ đã được xóa khỏi CSDL");
                        UpdateTable.LoadData(sqlBCCNo, jTable5);
                    }
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                    e.printStackTrace();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                e.printStackTrace();
            }

        }

    }//GEN-LAST:event_jButton21ActionPerformed
//nut sua bao cao cong no
    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();
        if (jTextField41.getText().equals("")) {
            sb.append("Tháng không được để trống");
            jTextField41.setBackground(Color.red);
        } else {
            jTextField41.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (Cmb_MAPTB.getSelectedItem() == null) {
            sb.append("Vui lòng chọn mã phiếu thu !");
            Cmb_MAPTB.setBackground(Color.red);
        } else {
            Cmb_MAPTB.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (jTextField38.getText().equals("")) {
            sb.append("Nợ đầu không được để trống");
            jTextField38.setBackground(Color.red);
        } else {
            jTextField38.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (jTextField37.getText().equals("")) {
            sb.append("Phát sinh không được để trống");
            jTextField37.setBackground(Color.red);
        } else {
            jTextField37.setBackground(Color.white);
        }
        if (sb.length() > 0) {
            JOptionPane.showConfirmDialog(this, sb);
            return;
        }
        if (JOptionPane.showConfirmDialog(this, " Bạn có muốn sửa báo cáo công nợ không?") == JOptionPane.NO_OPTION) {
            return;
        }
//       else
//       {
        try {
            BAOCAOCONGNO bccn = new BAOCAOCONGNO();
            bccn.setMABCCN(Integer.parseInt(jTextField42.getText()));
            bccn.setTHANG(jTextField41.getText());
            bccn.setMAPT(Integer.parseInt((String) Cmb_MAPNT.getSelectedItem()));
            bccn.setNODAU(Integer.parseInt(jTextField38.getText()));
            bccn.setPHATSINH(Integer.parseInt(jTextField37.getText()));
            TXS5 txs5 = new TXS5();
            txs5.update(bccn);
            UpdateTable.LoadData(sqlBCCNo, jTable5);
            JOptionPane.showMessageDialog(this, "Báo cáo công nợ mới đã được sửa vào CSDL");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
            e.printStackTrace();
        }
//       }
    }//GEN-LAST:event_jButton22ActionPerformed
//nut thoat bao cao cong no
    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        // TODO add your handling code here:
        Exit();
    }//GEN-LAST:event_jButton23ActionPerformed
//nut them bao cao cong no
    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        // TODO add your handling code here:
        jTextField42.setEditable(false);
        jTextField42.setBackground(Color.lightGray);
        jTextField36.setEditable(false);
        jTextField36.setBackground(Color.lightGray);
        jTextField39.setEditable(false);
        jTextField39.setBackground(Color.lightGray);
        ResetAllBCCN();
        varsave = true;
    }//GEN-LAST:event_jButton24ActionPerformed
    public void ResetAllBCCN() {
        jTextField42.setText("");
        jTextField41.setText("");
        Cmb_MAPTB.setSelectedItem(null);
        jTextField39.setText("");
        jTextField38.setText("");
        jTextField37.setText("");
        jTextField36.setText("");
    }
//nut luu bao cao cong no
    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        // TODO add your handling code here:
        if (varsave == true) {
            StringBuilder sb = new StringBuilder();
            if (jTextField41.getText().equals("")) {
                sb.append("Tháng không được để trống");
                jTextField41.setBackground(Color.red);
            } else {
                jTextField41.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (Cmb_MAPTB.getSelectedItem() == null) {
                sb.append("Vui lòng chọn mã phiếu thu !");
                Cmb_MAPTB.setBackground(Color.red);
            } else {
                Cmb_MAPTB.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (jTextField38.getText().equals("")) {
                sb.append("Nợ đầu không được để trống");
                jTextField38.setBackground(Color.red);
            } else {
                jTextField38.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (jTextField37.getText().equals("")) {
                sb.append("Phát sinh không được để trống");
                jTextField37.setBackground(Color.red);
            } else {
                jTextField37.setBackground(Color.white);
            }
            if (sb.length() > 0) {
                JOptionPane.showConfirmDialog(this, sb);
                return;
            }
            if (JOptionPane.showConfirmDialog(this, " Bạn có muốn thêm báo cáo công nợ không?") == JOptionPane.NO_OPTION) {
                return;

            }
//       else{
            try {
                BAOCAOCONGNO bccn = new BAOCAOCONGNO();
//           bccn.setMABCCN(Integer.parseInt(jTextField42.getText()));
                bccn.setTHANG(jTextField41.getText());
                bccn.setMAPT(Integer.parseInt((String) Cmb_MAPNT.getSelectedItem()));
                bccn.setNODAU(Integer.parseInt(jTextField38.getText()));
                bccn.setPHATSINH(Integer.parseInt(jTextField37.getText()));
                TXS5 txs5 = new TXS5();
                txs5.insert(bccn);
                UpdateTable.LoadData(sqlBCCNo, jTable5);
                JOptionPane.showMessageDialog(this, "Báo cáo công nợ mới đã được lưu vào CSDL");
                varsave = false;
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
                e.printStackTrace();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhấn nút Thêm !");
        }
//       }
    }//GEN-LAST:event_jButton25ActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        try {
            jTextField19.setEditable(false);
            jTextField19.setBackground(Color.lightGray);
            jTextField20.setEditable(false);
            jTextField20.setBackground(Color.lightGray);
            int row = this.jTable2.getSelectedRow();
            String IDrow = (this.jTable2.getModel().getValueAt(row, 0)).toString();
            String sql1 = "SELECT HOADONBANSACH.*, PHIEUTHUTIEN.HOTENKH FROM HOADONBANSACH,PHIEUTHUTIEN,BAOCAOCONGNO,PHIEUNHAPSACH where (HOADONBANSACH.MAPT = PHIEUTHUTIEN.MAPT and HOADONBANSACH.MAPN = PHIEUNHAPSACH.MAPN and HOADONBANSACH.MABCCN = BAOCAOCONGNO.MABCCN) and HOADONBANSACH.MAHD='" + IDrow + "'";

            ResultSet rs = UpdateTable.ShowTextField(sql1);
            if (rs.next()) {
                this.jTextField19.setText(rs.getString("MAHD"));
                this.jTextField14.setText(rs.getString("NGAYLAPHOADON"));
                this.Cmb_MAPT.setSelectedItem(rs.getString("MAPT"));
                this.Cmb_MAPN.setSelectedItem(rs.getString("MAPN"));
                this.Cmb_MABCCN.setSelectedItem(rs.getString("MABCCN"));
                this.jTextField20.setText(rs.getString("HOTENKH"));
                this.jTextField15.setText(rs.getString("DONGIA"));
                this.jTextField21.setText(rs.getString("SL"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable2MouseClicked
//nut tim kiem hoa don
    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        // TODO add your handling code here:
        
        String sql1 = "SELECT d.MAHD,e.HOTENKH,d.NGAYLAPHOADON,p.TENSACH,p.THELOAI,d.SL,d.DONGIA FROM PHIEUNHAPSACH p, HOADONBANSACH d, PHIEUTHUTIEN e where (p.MAPN = d.MAPN and d.MAPT = e.MAPT) and d.MAHD like N'%" + this.jTextField3.getText() + "%'";
        SearchS(jTextField3,sqlHDSach,sql1,jTable2);
    }//GEN-LAST:event_jToggleButton2ActionPerformed
//nut tim kiem phieu thu
    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        // TODO add your handling code here:
        String sql1 = "select * from PHIEUTHUTIEN where MAPT like N'%" + this.jTextField4.getText() + "%' OR HOTENKH LIKE N'%"+this.jTextField4.getText()+"%'";
        SearchS(jTextField4,sqlPTTien,sql1,jTable3);
    }//GEN-LAST:event_jToggleButton3ActionPerformed
//nut tim kiem bao cao ton
    private void jToggleButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton4ActionPerformed
        // TODO add your handling code here:
        String sql1 = "select a.MABCT,a.THANG,b.TENSACH, a.TONDAU,a.PHATSINH, (a.TONDAU+a.PHATSINH) AS 'TONCUOI' from BAOCAOTON a ,PHIEUNHAPSACH b where (a.MAPN =b.MAPN) and a.MABCT like N'%" + this.jTextField5.getText() + "%'";
        SearchS(jTextField5,sqlBCTon,sql1,jTable4);
    }//GEN-LAST:event_jToggleButton4ActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        try {
            jTextField22.setEditable(false);
            jTextField22.setBackground(Color.lightGray);
            int row = this.jTable1.getSelectedRow();
            String IDrow = (this.jTable1.getModel().getValueAt(row, 0)).toString();
            String sql1 = "SELECT * FROM PHIEUNHAPSACH where MAPN='" + IDrow + "'";
            ResultSet rs = UpdateTable.ShowTextField(sql1);
            if (rs.next()) {
                this.jTextField22.setText(rs.getString("MAPN"));
                this.jTextField10.setText(rs.getString("TENSACH"));
                this.jTextField9.setText(rs.getString("THELOAI"));
                this.jTextField11.setText(rs.getString("TACGIA"));
                this.jTextField13.setText(rs.getString("NGAYNHAP"));
                this.jTextField8.setText(rs.getString("SL"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
        try {
            jTextField29.setEditable(false);
            jTextField29.setBackground(Color.lightGray);
            int row = this.jTable3.getSelectedRow();
            String IDrow = (this.jTable3.getModel().getValueAt(row, 0)).toString();
            String sql1 = "select * from PHIEUTHUTIEN where MAPT='" + IDrow + "'";
            ResultSet rs = UpdateTable.ShowTextField(sql1);
            if (rs.next()) {
                this.jTextField29.setText(rs.getString("MAPT"));
                this.jTextField28.setText(rs.getNString("HOTENKH"));
                this.jTextField27.setText(rs.getString("SDT"));
                this.jTextField26.setText(rs.getString("EMAIL"));
                this.jTextField25.setText(rs.getNString("DIACHI"));
                this.jTextField24.setText(rs.getString("NGAYTHUTIEN"));
                this.jTextField23.setText(rs.getString("SOTIENTHU"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable3MouseClicked

    private void jTable4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable4MouseClicked
        // TODO add your handling code here:
        try {
            jTextField43.setEditable(false);
            jTextField43.setBackground(Color.lightGray);
            jTextField35.setEditable(false);
            jTextField35.setBackground(Color.lightGray);
            int row = this.jTable4.getSelectedRow();
            String IDrow = (this.jTable4.getModel().getValueAt(row, 0)).toString();
            String sql1 = "select BAOCAOTON.*,(BAOCAOTON.TONDAU+BAOCAOTON.PHATSINH) AS 'TONCUOI',PHIEUNHAPSACH.MAPN from BAOCAOTON,PHIEUNHAPSACH where BAOCAOTON.MAPN = PHIEUNHAPSACH.MAPN and BAOCAOTON.MABCT='" + IDrow + "'";
            ResultSet rs = UpdateTable.ShowTextField(sql1);
            if (rs.next()) {
                this.jTextField43.setText(rs.getString("MABCT"));
                this.jTextField30.setText(rs.getString("THANG"));
                this.Cmb_MAPNT.setSelectedItem(rs.getString("MAPN"));
                this.jTextField33.setText(rs.getString("TONDAU"));
                this.jTextField34.setText(rs.getString("PHATSINH"));
                this.jTextField35.setText(rs.getString("TONCUOI"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable4MouseClicked

    private void jTable5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable5MouseClicked
        // TODO add your handling code here:
        try {
            jTextField42.setEditable(false);
            jTextField42.setBackground(Color.lightGray);
            jTextField36.setEditable(false);
            jTextField36.setBackground(Color.lightGray);
            jTextField39.setEditable(false);
            jTextField39.setBackground(Color.lightGray);
            int row = this.jTable5.getSelectedRow();
            String IDrow = (this.jTable5.getModel().getValueAt(row, 0)).toString();
            String sql1 = "SELECT BAOCAOCONGNO.*,(BAOCAOCONGNO.NODAU+BAOCAOCONGNO.PHATSINH) as'NOCUOI',PHIEUTHUTIEN.HOTENKH FROM BAOCAOCONGNO,PHIEUTHUTIEN WHERE BAOCAOCONGNO.MAPT = PHIEUTHUTIEN.MAPT AND BAOCAOCONGNO.MABCCN='" + IDrow + "'";
            ResultSet rs = UpdateTable.ShowTextField(sql1);
            if (rs.next()) {
                this.jTextField42.setText(rs.getString("MABCCN"));
                this.jTextField41.setText(rs.getString("THANG"));
                this.Cmb_MAPTB.setSelectedItem(rs.getString("MAPT"));
                this.jTextField39.setText(rs.getString("HOTENKH"));
                this.jTextField38.setText(rs.getString("NODAU"));
                this.jTextField37.setText(rs.getString("PHATSINH"));
                this.jTextField36.setText(rs.getString("NOCUOI"));
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jTable5MouseClicked

    private void jTextField38ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField38ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField38ActionPerformed

    private void jToggleButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton6ActionPerformed
        // TODO add your handling code here:
        String sql = "SELECT MAPN AS N'Mã sách', TENSACH,THELOAI,TACGIA,SL FROM PHIEUNHAPSACH WHERE MAPN LIKE N'%"+this.jTextField7.getText()+"%' OR TENSACH LIKE N'%"+this.jTextField7.getText()+"%'";
        SearchS(jTextField7,sqlSach,sql,jTable6);
    }//GEN-LAST:event_jToggleButton6ActionPerformed

    private void jTabbedPane1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTabbedPane1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTabbedPane1AncestorAdded
//nut tim kiem bao cao cong no
    private void jToggleButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton5ActionPerformed
        // TODO add your handling code here:

        String sql1 = "select b.MABCCN, b.THANG, t.HOTENKH,b.NODAU,b.PHATSINH, (NODAU+PHATSINH) as'NOCUOI' from BAOCAOCONGNO b , PHIEUTHUTIEN t, HOADONBANSACH h where (b.MAPT = t.MAPT and b.MABCCN=h.MABCCN) and b.MABCCN like N'%" + this.jTextField6.getText() + "%'";
        SearchS(jTextField6,sqlBCCNo,sql1,jTable5);
    }//GEN-LAST:event_jToggleButton5ActionPerformed

    private void jButton29ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton29ActionPerformed

        UpdateTable.LoadData(sqlSach, jTable6);
    }//GEN-LAST:event_jButton29ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QLNS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QLNS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QLNS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QLNS.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QLNS().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> Cmb_MABCCN;
    private javax.swing.JComboBox<String> Cmb_MAPN;
    private javax.swing.JComboBox<String> Cmb_MAPNT;
    private javax.swing.JComboBox<String> Cmb_MAPT;
    private javax.swing.JComboBox<String> Cmb_MAPT1;
    private javax.swing.JComboBox<String> Cmb_MAPTB;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton29;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JTable jTable4;
    private javax.swing.JTable jTable5;
    private javax.swing.JTable jTable6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField26;
    private javax.swing.JTextField jTextField27;
    private javax.swing.JTextField jTextField28;
    private javax.swing.JTextField jTextField29;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField30;
    private javax.swing.JTextField jTextField33;
    private javax.swing.JTextField jTextField34;
    private javax.swing.JTextField jTextField35;
    private javax.swing.JTextField jTextField36;
    private javax.swing.JTextField jTextField37;
    private javax.swing.JTextField jTextField38;
    private javax.swing.JTextField jTextField39;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField41;
    private javax.swing.JTextField jTextField42;
    private javax.swing.JTextField jTextField43;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    private javax.swing.JToggleButton jToggleButton3;
    private javax.swing.JToggleButton jToggleButton4;
    private javax.swing.JToggleButton jToggleButton5;
    private javax.swing.JToggleButton jToggleButton6;
    // End of variables declaration//GEN-END:variables
}
